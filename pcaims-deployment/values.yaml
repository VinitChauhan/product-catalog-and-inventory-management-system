# Default values for pcaims-deployment.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global configuration
global:
  imageRegistry: ghcr.io
  imagePullPolicy: IfNotPresent

# Frontend configuration
frontend:
  enabled: true
  replicaCount: 1
  image:
    repository: ghcr.io/vinitchauhan/product-catalog-and-inventory-management-system-frontend
    tag: "latest"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  env:
    FLASK_APP: app.py
    FLASK_ENV: production

# Backend configuration
backend:
  enabled: true
  replicaCount: 1
  image:
    repository: ghcr.io/vinitchauhan/product-catalog-and-inventory-management-system-backend
    tag: "latest"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8000
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  env:
    DB_USER: root
    DB_PASSWORD: rootpassword
    DB_PORT: "3306"
    DB_NAME: inventory_management
    SECRET_KEY: your-secret-key-here-change-in-production
    ALGORITHM: HS256
    ACCESS_TOKEN_EXPIRE_MINUTES: "30"

# MySQL database configuration
mysql:
  enabled: true
  replicaCount: 1
  image:
    repository: mysql
    tag: "8.0"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 3306
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  persistence:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 3Gi
  env:
    MYSQL_ROOT_PASSWORD: rootpassword
    MYSQL_DATABASE: inventory_management
    MYSQL_USER: user
    MYSQL_PASSWORD: password

# GitHub Container Registry configuration
ghcr:
  # GitHub username
  username: ""
  # GitHub Personal Access Token with packages:read permission
  token: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets:
  - name: ghcr-secret
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: pcaims.local
      paths:
        - path: /
          pathType: Prefix
          service: frontend
        - path: /api
          pathType: Prefix
          service: backend
  tls: []
  #  - secretName: pcaims-tls
  #    hosts:
  #      - pcaims.local

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
