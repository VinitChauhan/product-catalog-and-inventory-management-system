services:
  # MySQL Database Service
  mysql:
    image: mysql:8.0
    container_name: inventory_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: inventory_management
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./src/database/init.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - inventory_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      timeout: 20s
      retries: 10
      start_period: 30s

  # Backend Service (FastAPI)
  backend:
    build:
      context: ./src/backend
      dockerfile: dockerfile
    container_name: inventory_backend
    restart: unless-stopped
    environment:
      - DB_USER=root
      - DB_PASSWORD=rootpassword
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=inventory_management
      - SECRET_KEY=your-secret-key-here-change-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    ports:
      - "8000:8000"
    volumes:
      - ./src/backend:/app
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - inventory_network
    command: ["sh", "-c", "sleep 10 && uvicorn main:app --host 0.0.0.0 --port 8000"]

  # Frontend Service (Flask)
  frontend:
    build:
      context: ./src/frontend
      dockerfile: dockerfile
    container_name: inventory_frontend
    restart: unless-stopped
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - BACKEND_URL=http://backend:8000
    ports:
      - "5001:5000"
    volumes:
      - ./src/frontend:/app
    depends_on:
      - backend
    networks:
      - inventory_network
    command: ["flask", "run", "--host", "0.0.0.0", "--port", "5000"]

# Networks
networks:
  inventory_network:
    driver: bridge

# Volumes
volumes:
  mysql_data:
    driver: local
